@model CommandGame.Models.GameState
@{
    var grid = Model.Grid;
    var ship = Model.Ship;
    Func<CommandGame.Models.TileColor, string> TileColorClass = color =>
        color == CommandGame.Models.TileColor.Red ? "tile-red" :
        color == CommandGame.Models.TileColor.Blue ? "tile-blue" :
        color == CommandGame.Models.TileColor.Green ? "tile-green" :
        color == CommandGame.Models.TileColor.White ? "tile-white" :
        "tile-none";
    var commandTypes = new[] { "Up", "TurnLeft", "TurnRight", "CallFunction" };
    var colors = new[] { "None", "Red", "Blue", "Green" };
    var userCommands = ViewBag.UserCommands as List<CommandGame.Models.UserCommand> ?? new List<CommandGame.Models.UserCommand>();
    var commandStack = ViewBag.CommandStack as List<CommandGame.Models.Command> ?? new List<CommandGame.Models.Command>();
    string ShipArrow(CommandGame.Models.Orientation orientation) => orientation switch {
        CommandGame.Models.Orientation.North => "⬆️",
        CommandGame.Models.Orientation.East => "➡️",
        CommandGame.Models.Orientation.South => "⬇️",
        CommandGame.Models.Orientation.West => "⬅️",
        _ => "⬆️"
    };
}

<h2>Command Game Prototype</h2>

<div class="command-editor">
    <h3>Build Your Function (f0)</h3>
    <form method="post" asp-action="Index" asp-controller="Game">
        <div style="display: flex; gap: 8px; align-items: center;">
            <select name="commandType">
                @foreach (var type in commandTypes)
                {
                    <option value="@type">@type</option>
                }
            </select>
            <select name="color">
                @foreach (var color in colors)
                {
                    <option value="@color">@color</option>
                }
            </select>
            <button type="submit" name="action" value="add">Add Command</button>
        </div>
        <div style="margin-top: 10px; display: flex; gap: 10px;">
            <button type="submit" name="action" value="run" style="background: #007bff; color: white; padding: 6px 16px; border: none; border-radius: 4px;">Run</button>
            <button type="submit" name="action" value="step" style="background: #28a745; color: white; padding: 6px 16px; border: none; border-radius: 4px;">Step</button>
            <button type="submit" name="action" value="reset" style="background: #dc3545; color: white; padding: 6px 16px; border: none; border-radius: 4px;">Reset</button>
        </div>
    </form>
    <div>
        <strong>Current f0:</strong>
        <ol>
            @foreach (var cmd in userCommands)
            {
                <li>@cmd.Type (@cmd.Color)</li>
            }
        </ol>
    </div>
</div>

<div class="stack-visualization">
    <h3>Command Queue</h3>
    <ol style="list-style-type: decimal;">
        @for (int i = 0; i < commandStack.Count; i++)
        {
            var cmd = commandStack[i];
            var isFront = (i == 0);
            <li style="@(isFront ? "background: #ffe066; font-weight: bold;" : "")">
                @cmd.Type (@(cmd.Color?.ToString() ?? "None"))
                @if (isFront) { <span style="color: #d35400;">&larr; Next</span> }
            </li>
        }
    </ol>
</div>

@if (Model.IsGameOver)
{
    <h3 style="color:@(Model.IsWin ? "green" : "red")">
        @(Model.IsWin ? "You Win!" : "Game Over")
    </h3>
}
<table class="game-grid">
    @for (int y = 0; y < grid.Length; y++)
    {
        <tr>
        @for (int x = 0; x < grid[y].Length; x++)
        {
            var tile = grid[y][x];
            <td class="@TileColorClass(tile.Color)">
                @if (ship.X == x && ship.Y == y)
                {
                    <span class="ship">@ShipArrow(ship.Orientation)</span>
                }
                else if (tile.HasStar)
                {
                    <span class="star">⭐</span>
                }
            </td>
        }
        </tr>
    }
</table>

<style>
.game-grid { border-collapse: collapse; }
.game-grid td { width: 40px; height: 40px; text-align: center; vertical-align: middle; border: 1px solid #888; font-size: 24px; }
.tile-red { background: #f88; }
.tile-blue { background: #88f; }
.tile-green { background: #8f8; }
.tile-white { background: #fff; }
.tile-none { background: #eee; }
.ship { font-size: 24px; }
.star { font-size: 22px; }
.command-editor { margin-bottom: 20px; padding: 10px; background: #f4f4f4; border-radius: 8px; }
.stack-visualization { margin-bottom: 20px; padding: 10px; background: #eaf6ff; border-radius: 8px; }
</style> 